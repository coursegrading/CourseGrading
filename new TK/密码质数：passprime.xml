<?xml version="1.0" encoding="UTF-8"?>   
<fps version="1.2" url="https://github.com/zhblue/freeproblemset/">
	<generator name="HUSTOJ" url="https://github.com/zhblue/hustoj/"/>
	<item>
<title><![CDATA[密码质数：passprime [1*+]]]></title>
<time_limit unit="s"><![CDATA[1]]></time_limit>
<memory_limit unit="mb"><![CDATA[128]]></memory_limit>

<description><![CDATA[<p>
	<span> 密码质数：passprime.pas 输入文件passprime.in 输出文件passprime.out <br />
【问题描述】  因为素数没有1以外的因数，而且素数排列也完全没有规律，因此常被用来做为生成密码的基础。牛博士想从5000以内的素数表中选取若干个素数用来生成密码。你是牛博士的助手，主动提出要帮牛博士找来些素数。 <br />
【输入】  输入文件有多行，第一行为数值N，表示需要N个素数，N&lt;=1000。 <br />
接下来的N行，每行一个数i，代表素数表中的第i个数，素数表的第一个数是2 <br />
【输出】  有N行数据，每行一个数为按要求找到的素数。</span>
</p>
<pre><span> 【样例输入】       【样例输出】 

3                   2

1                   11

5                   5

3</span></pre>]]></description>
<input><![CDATA[]]></input> 
<output><![CDATA[]]></output>
<sample_input><![CDATA[]]></sample_input>
<sample_output><![CDATA[]]></sample_output>
  <test_input><![CDATA[1000
140
138
633
667
305
215
194
164
630
10
441
60
326
60
25
135
337
145
449
290
291
249
376
303
5
376
650
382
181
23
105
496
320
33
435
299
559
277
628
434
564
385
478
27
649
595
322
154
510
610
29
527
613
358
52
106
351
467
14
194
522
284
155
627
4
466
428
463
593
27
346
655
668
160
329
432
613
85
15
653
57
214
655
496
74
131
621
41
148
405
510
103
282
361
532
149
587
27
289
105
416
314
620
324
155
65
258
483
514
496
363
312
389
185
53
279
532
513
173
463
280
578
448
176
201
558
551
540
212
418
427
248
102
243
432
532
451
627
638
311
403
236
315
106
614
521
218
145
435
318
227
303
576
404
543
430
130
176
625
380
200
4
262
73
481
201
415
276
375
378
631
661
449
357
590
546
23
77
327
633
249
206
665
87
661
273
124
220
344
545
364
566
143
18
429
645
152
268
197
347
6
641
267
280
7
200
101
357
303
277
141
77
402
586
332
203
594
499
271
524
458
406
115
220
363
314
175
268
296
314
612
173
342
546
479
134
622
156
443
22
618
549
556
52
364
343
569
125
561
547
243
102
228
600
219
36
395
519
373
140
603
209
566
570
380
613
137
351
422
266
88
648
211
314
363
586
113
233
562
182
153
339
259
324
346
472
273
108
74
289
621
25
30
18
150
560
167
456
292
246
167
387
23
553
39
31
567
272
160
546
407
185
373
280
182
435
73
541
646
288
92
127
211
551
636
278
198
115
72
150
532
258
72
66
353
252
140
496
177
316
72
9
423
541
98
462
449
338
589
503
149
229
477
276
222
422
591
369
545
643
122
252
250
72
288
277
22
108
249
298
271
414
182
620
594
341
510
241
335
302
16
587
267
317
274
87
527
669
75
206
502
583
419
570
308
113
391
417
512
408
615
462
625
180
654
533
544
204
346
84
345
186
124
413
299
413
232
334
108
298
611
426
124
436
627
351
375
240
73
380
496
212
576
158
213
501
612
454
545
364
503
502
668
54
258
278
149
519
370
478
404
660
262
334
199
257
522
454
252
107
75
27
239
278
464
543
571
501
155
84
117
274
451
410
44
488
369
548
101
8
110
158
565
65
88
355
645
337
79
168
275
222
322
648
225
319
247
43
223
380
663
149
650
191
79
424
529
345
231
594
407
285
568
504
418
89
273
535
268
555
151
219
512
287
425
152
561
650
240
218
186
239
67
615
160
375
100
407
668
506
660
241
531
508
444
447
275
280
590
108
164
77
420
302
491
439
259
328
578
538
165
18
266
319
256
255
595
421
148
511
497
520
418
168
130
483
204
265
114
244
200
142
316
396
220
264
223
151
566
549
328
112
254
635
372
512
510
300
252
192
564
625
377
385
626
283
298
425
517
35
563
26
544
530
133
402
269
3
265
186
487
287
555
355
584
330
663
612
40
200
562
64
218
614
537
154
132
431
273
203
53
239
294
132
245
15
143
2
665
263
654
518
492
422
117
615
29
121
104
387
291
71
185
147
271
98
271
643
121
147
109
112
109
285
66
477
17
469
231
575
613
12
88
319
39
368
364
293
306
552
323
297
343
236
664
323
343
30
137
317
303
484
40
545
586
298
225
52
243
601
12
223
601
376
161
55
426
18
142
296
517
485
346
217
163
125
479
439
92
81
287
501
92
99
356
103
428
535
422
501
247
269
288
83
86
140
445
507
579
131
56
190
626
180
142
514
170
665
249
240
84
554
391
534
510
659
361
211
474
216
314
230
589
348
356
83
507
505
289
194
34
541
105
45
637
568
337
368
413
641
218
398
553
639
87
624
35
615
192
472
263
135
512
333
426
190
53
102
96
361
451
495
61
327
431
280
198
393
578
277
301
259
307
474
128
305
624
600
529
390
8
200
71
200
213
565
62
604
250
594
436
271
610
284
260
620
268
92
144
147
342
453
83
160
328
187
509
261
285
572
213
313
179
116
70
442
55
473
507
236
404
94
172
581
27
242
426
584
140
601
307
191
548
564
178
369
390
304
494
212
384
420
86
155
456
181
593
180
206
285
544
350
555
225
662
595
422
117
578
410
35
283
350
5
528
251
570
652
404
331
32
83
175
650
322
557
176
602
468
497
5
185
169
259
511
584
498
294
430
546
338
319
350
270
48
333
324
495
561
136
594
430
66
507
158
186
246
176
287
608
350
647
531
489
9
404
329
196
261
652
300
403
420
332
516
45
55
597
250
317
4
285
641
444
326
307
337
345
589
572
97
550
637
655
453
472
500
514
227
529
]]></test_input>
<test_output><![CDATA[809
787
4679
4987
2011
1319
1181
971
4657
29
3083
281
2161
281
97
761
2269
829
3169
1889
1901
1579
2579
1999
11
2579
4831
2633
1087
83
571
3541
2129
137
3037
1979
4051
1787
4649
3023
4093
2659
3391
103
4817
4357
2137
887
3643
4493
109
3793
4517
2411
239
577
2371
3319
43
1181
3739
1861
907
4643
7
3313
2969
3299
4339
103
2339
4903
4993
941
2207
3011
4517
439
47
4877
269
1307
4903
3541
373
739
4591
179
857
2789
3643
563
1831
2437
3833
859
4273
103
1879
571
2861
2083
4583
2143
907
313
1627
3457
3677
3541
2447
2069
2683
1103
241
1801
3833
3673
1031
3299
1811
4219
3167
1049
1229
4049
4001
3907
1301
2887
2963
1571
557
1543
3011
3833
3187
4643
4729
2063
2767
1487
2087
577
4519
3733
1361
829
3037
2111
1433
1999
4211
2777
3919
2999
733
1049
4637
2617
1223
7
1667
367
3433
1229
2857
1783
2557
2593
4663
4943
3169
2399
4297
3931
83
389
2179
4679
1579
1277
4969
449
4943
1753
683
1373
2311
3929
2459
4111
823
61
2971
4793
881
1721
1201
2341
13
4759
1709
1811
17
1223
547
2399
1999
1787
811
389
2753
4271
2237
1237
4349
3559
1741
3767
3251
2791
631
1373
2447
2083
1039
1721
1949
2083
4513
1031
2297
3931
3407
757
4597
911
3109
79
4561
3967
4021
239
2459
2309
4133
691
4073
3943
1543
557
1439
4409
1367
151
2711
3719
2549
809
4441
1289
4111
4139
2617
4517
773
2371
2917
1699
457
4813
1297
2083
2447
4271
617
1471
4079
1091
883
2281
1637
2143
2339
3347
1753
593
373
1879
4591
97
113
61
863
4057
991
3221
1907
1559
991
2671
83
4007
167
127
4127
1747
941
3931
2797
1103
2549
1811
1091
3037
367
3911
4799
1877
479
709
1297
4001
4721
1789
1213
631
359
863
3833
1627
359
317
2381
1601
809
3541
1051
2089
359
23
2927
3911
521
3271
3169
2273
4289
3593
859
1447
3389
1783
1399
2917
4327
2521
3929
4787
673
1601
1583
359
1877
1787
79
593
1579
1973
1741
2851
1091
4583
4349
2293
3643
1523
2251
1997
53
4273
1709
2099
1759
449
3793
4999
379
1277
3583
4253
2897
4139
2029
617
2689
2879
3671
2801
4523
3271
4637
1069
4889
3847
3923
1249
2339
433
2333
1109
683
2843
1979
2843
1459
2243
593
1973
4507
2957
683
3041
4643
2371
2557
1511
367
2617
3541
1301
4211
929
1303
3581
4513
3209
3929
2459
3593
3583
4993
251
1627
1789
859
3719
2531
3391
2777
4937
1667
2243
1217
1621
3739
3209
1601
587
379
103
1499
1789
3301
3919
4153
3581
907
433
643
1759
3187
2819
193
3491
2521
3947
547
19
601
929
4099
313
457
2389
4793
2269
401
997
1777
1399
2137
4813
1427
2113
1567
191
1409
2617
4957
859
4831
1153
401
2939
3803
2333
1453
4349
2797
1867
4129
3607
2887
461
1753
3853
1721
4019
877
1367
3671
1873
2953
881
4073
4831
1511
1361
1109
1499
331
4523
941
2557
541
2797
4993
3617
4937
1523
3823
3631
3119
3163
1777
1811
4297
593
971
389
2903
1997
3517
3067
1637
2203
4219
3881
977
61
1699
2113
1619
1613
4357
2909
857
3659
3547
3727
2887
997
733
3457
1249
1697
619
1549
1223
821
2089
2713
1373
1693
1409
877
4111
3967
2203
613
1609
4703
2543
3671
3643
1987
1601
1163
4093
4637
2591
2659
4639
1847
1973
2953
3701
149
4091
101
3923
3821
751
2753
1723
5
1697
1109
3469
1873
4019
2389
4259
2213
4957
4513
173
1223
4079
311
1361
4519
3877
887
743
3001
1753
1237
241
1499
1931
743
1553
47
823
3
4969
1669
4889
3709
3527
2917
643
4523
109
661
569
2671
1901
353
1103
853
1741
521
1741
4787
661
853
599
613
599
1867
317
3389
59
3329
1453
4201
4517
37
457
2113
167
2503
2459
1913
2017
4003
2141
1951
2309
1487
4967
2141
2309
113
773
2099
1999
3461
173
3929
4271
1973
1427
239
1543
4421
37
1409
4421
2579
947
257
2957
61
821
1949
3701
3463
2339
1327
967
691
3407
3067
479
419
1873
3581
479
523
2393
563
2969
3853
2917
3581
1567
1723
1877
431
443
809
3121
3623
4229
739
263
1151
4639
1069
821
3677
1013
4969
1579
1511
433
4013
2689
3851
3643
4933
2437
1297
3361
1321
2083
1451
4289
2347
2393
431
3623
3613
1879
1181
139
3911
571
197
4723
4129
2269
2503
2843
4759
1361
2729
4007
4733
449
4621
149
4523
1163
3347
1669
761
3671
2239
2957
1151
241
557
503
2437
3187
3539
283
2179
3001
1811
1213
2699
4219
1787
1993
1637
2027
3361
719
2011
4621
4409
3803
2687
19
1223
353
1223
1303
4099
293
4447
1583
4349
3041
1741
4493
1861
1657
4583
1721
479
827
853
2297
3203
431
941
2203
1117
3637
1663
1867
4157
1303
2081
1063
641
349
3089
257
3359
3623
1487
2777
491
1021
4241
103
1531
2957
4259
809
4421
2027
1153
3947
4093
1061
2521
2687
2003
3533
1301
2657
2903
443
907
3221
1087
4339
1069
1277
1867
3923
2357
4019
1427
4951
4357
2917
643
4219
2819
149
1847
2357
11
3797
1597
4139
4871
2777
2221
131
431
1039
4831
2137
4027
1049
4423
3323
3547
11
1103
1009
1637
3659
4259
3557
1931
2999
3931
2273
2113
2357
1733
223
2239
2143
3539
4073
769
4349
2999
317
3623
929
1109
1559
1049
1873
4481
2357
4801
3823
3499
23
2777
2207
1193
1663
4871
1987
2767
2903
2237
3697
197
257
4373
1583
2099
7
1867
4759
3119
2161
2027
2269
2333
4289
4157
509
3989
4723
4903
3203
3347
3571
3677
1433
3803
]]></test_output>
<test_input><![CDATA[300
615
599
428
150
60
576
187
327
151
286
634
57
13
586
196
630
82
410
41
229
157
185
14
35
231
662
569
66
137
357
276
160
401
634
245
32
20
542
341
629
134
443
121
549
459
646
534
343
656
14
557
69
450
200
3
571
626
344
172
391
498
660
285
136
215
251
283
314
133
304
91
369
359
190
526
369
324
206
142
295
600
458
310
2
347
321
331
255
399
335
13
301
76
45
234
538
20
55
256
191
641
137
307
105
640
159
354
219
610
21
559
181
552
532
471
502
480
272
52
226
619
167
29
605
162
3
554
431
213
129
155
646
184
112
238
539
388
245
367
239
258
323
192
372
309
357
390
432
517
157
177
203
572
66
531
65
277
597
372
341
284
188
221
329
472
411
583
340
492
644
352
88
489
39
619
99
300
168
407
396
512
601
260
267
170
295
374
347
214
121
390
28
632
259
342
259
303
428
534
562
382
17
475
69
188
226
133
164
428
109
600
202
158
244
418
272
160
242
497
12
234
277
20
54
374
643
97
514
194
280
372
426
84
651
111
236
639
311
359
615
291
222
178
653
148
526
348
264
62
55
558
7
472
194
141
559
12
52
46
604
307
373
388
237
82
639
610
292
4
484
623
84
230
658
624
637
442
394
80
415
222
159
161
559
469
305
622
616
39
339
205
586
503
203
543
127
359
103
351
391

]]></test_input>
<test_output><![CDATA[4523
4397
2969
863
281
4211
1117
2179
877
1871
4691
269
41
4271
1193
4657
421
2819
179
1447
919
1103
43
149
1453
4951
4133
317
773
2399
1783
941
2749
4691
1553
131
71
3917
2293
4651
757
3109
661
3967
3253
4799
3851
2309
4909
43
4027
347
3181
1223
5
4153
4639
2311
1021
2689
3557
4937
1867
769
1319
1597
1847
2083
751
2003
467
2521
2417
1151
3779
2521
2143
1277
821
1933
4409
3251
2053
3
2341
2131
2221
1613
2731
2251
41
1993
383
197
1481
3881
71
257
1619
1153
4759
773
2027
571
4751
937
2383
1367
4493
73
4051
1087
4003
3833
3343
3583
3413
1747
239
1429
4567
991
109
4451
953
5
4013
3001
1303
727
907
4799
1097
613
1493
3889
2677
1553
2477
1499
1627
2141
1163
2543
2039
2399
2687
3011
3701
919
1051
1237
4157
317
3823
313
1787
4373
2543
2293
1861
1123
1381
2207
3347
2833
4253
2287
3527
4789
2377
457
3499
167
4567
523
1987
997
2797
2713
3671
4421
1657
1709
1013
1933
2551
2341
1307
661
2687
107
4673
1637
2297
1637
1999
2969
3851
4079
2633
59
3371
347
1123
1429
751
971
2969
599
4409
1231
929
1549
2887
1747
941
1531
3547
37
1481
1787
71
251
2551
4787
509
3677
1181
1811
2543
2957
433
4861
607
1487
4733
2063
2417
4523
1901
1399
1061
4877
857
3779
2347
1693
293
257
4049
17
3347
1181
811
4051
37
239
199
4447
2027
2549
2677
1489
421
4733
4493
1907
7
3461
4603
433
1451
4931
4621
4723
3089
2707
409
2857
1399
937
947
4051
3329
2011
4597
4547
167
2281
1259
4271
3593
1237
3919
709
2417
563
2371
2689
]]></test_output>
<test_input><![CDATA[6
100
200
300
400
500
600
]]></test_input>
<test_output><![CDATA[541
1223
1987
2741
3571
4409
]]></test_output>
<test_input><![CDATA[100
350
328
643
176
315
177
323
215
458
106
391
525
71
502
175
226
31
160
515
185
418
301
5
561
446
287
132
178
496
78
661
314
589
249
315
466
525
277
542
495
356
347
282
341
81
183
1
494
580
99
535
327
439
127
92
43
63
134
403
6
25
77
371
201
167
636
173
629
258
238
187
109
663
48
324
392
108
235
347
213
392
16
535
521
628
211
115
661
495
581
284
202
275
173
611
158
554
56
17
443

]]></test_input>
<test_output><![CDATA[2357
2203
4787
1049
2087
1051
2141
1319
3251
577
2689
3769
353
3583
1039
1429
127
941
3691
1103
2887
1993
11
4073
3137
1873
743
1061
3541
397
4943
2083
4289
1579
2087
3313
3769
1787
3917
3539
2393
2341
1831
2293
419
1093
2
3533
4231
523
3853
2179
3067
709
479
191
307
757
2767
13
97
389
2539
1229
991
4721
1031
4651
1627
1493
1117
599
4957
223
2143
2693
593
1483
2341
1303
2693
53
3853
3733
4649
1297
631
4943
3539
4241
1861
1231
1777
1031
4507
929
4013
263
59
3109
]]></test_output>
<test_input><![CDATA[1000
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
109
110
111
112
113
114
115
116
117
118
119
120
121
122
123
124
125
126
127
128
129
130
131
132
133
134
135
136
137
138
139
140
141
142
143
144
145
146
147
148
149
150
151
152
153
154
155
156
157
158
159
160
161
162
163
164
165
166
167
168
169
170
171
172
173
174
175
176
177
178
179
180
181
182
183
184
185
186
187
188
189
190
191
192
193
194
195
196
197
198
199
200
201
202
203
204
205
206
207
208
209
210
211
212
213
214
215
216
217
218
219
220
221
222
223
224
225
226
227
228
229
230
231
232
233
234
235
236
237
238
239
240
241
242
243
244
245
246
247
248
249
250
251
252
253
254
255
256
257
258
259
260
261
262
263
264
265
266
267
268
269
270
271
272
273
274
275
276
277
278
279
280
281
282
283
284
285
286
287
288
289
290
291
292
293
294
295
296
297
298
299
300
301
302
303
304
305
306
307
308
309
310
311
312
313
314
315
316
317
318
319
320
321
322
323
324
325
326
327
328
329
330
331
332
333
334
335
336
337
338
339
340
341
342
343
344
345
346
347
348
349
350
351
352
353
354
355
356
357
358
359
360
361
362
363
364
365
366
367
368
369
370
371
372
373
374
375
376
377
378
379
380
381
382
383
384
385
386
387
388
389
390
391
392
393
394
395
396
397
398
399
400
401
402
403
404
405
406
407
408
409
410
411
412
413
414
415
416
417
418
419
420
421
422
423
424
425
426
427
428
429
430
431
432
433
434
435
436
437
438
439
440
441
442
443
444
445
446
447
448
449
450
451
452
453
454
455
456
457
458
459
460
461
462
463
464
465
466
467
468
469
470
471
472
473
474
475
476
477
478
479
480
481
482
483
484
485
486
487
488
489
490
491
492
493
494
495
496
497
498
499
500
669
668
667
666
665
664
663
662
661
660
659
658
657
656
655
654
653
652
651
650
649
648
647
646
645
644
643
642
641
640
639
638
637
636
635
634
633
632
631
630
629
628
627
626
625
624
623
622
621
620
619
618
617
616
615
614
613
612
611
610
609
608
607
606
605
604
603
602
601
600
599
598
597
596
595
594
593
592
591
590
589
588
587
586
585
584
583
582
581
580
579
578
577
576
575
574
573
572
571
570
569
568
567
566
565
564
563
562
561
560
559
558
557
556
555
554
553
552
551
550
549
548
547
546
545
544
543
542
541
540
539
538
537
536
535
534
533
532
531
530
529
528
527
526
525
524
523
522
521
520
519
518
517
516
515
514
513
512
511
510
509
508
507
506
505
504
503
502
501
500
499
498
497
496
495
494
493
492
491
490
489
488
487
486
485
484
483
482
481
480
479
478
477
476
475
474
473
472
471
470
469
468
467
466
465
464
463
462
461
460
459
458
457
456
455
454
453
452
451
450
449
448
447
446
445
444
443
442
441
440
439
438
437
436
435
434
433
432
431
430
429
428
427
426
425
424
423
422
421
420
419
418
417
416
415
414
413
412
411
410
409
408
407
406
405
404
403
402
401
400
399
398
397
396
395
394
393
392
391
390
389
388
387
386
385
384
383
382
381
380
379
378
377
376
375
374
373
372
371
370
369
368
367
366
365
364
363
362
361
360
359
358
357
356
355
354
353
352
351
350
349
348
347
346
345
344
343
342
341
340
339
338
337
336
335
334
333
332
331
330
329
328
327
326
325
324
323
322
321
320
319
318
317
316
315
314
313
312
311
310
309
308
307
306
305
304
303
302
301
300
299
298
297
296
295
294
293
292
291
290
289
288
287
286
285
284
283
282
281
280
279
278
277
276
275
274
273
272
271
270
269
268
267
266
265
264
263
262
261
260
259
258
257
256
255
254
253
252
251
250
249
248
247
246
245
244
243
242
241
240
239
238
237
236
235
234
233
232
231
230
229
228
227
226
225
224
223
222
221
220
219
218
217
216
215
214
213
212
211
210
209
208
207
206
205
204
203
202
201
200
199
198
197
196
195
194
193
192
191
190
189
188
187
186
185
184
183
182
181
180
179
178
177
176
175
174
173
172
171
170
]]></test_input>
<test_output><![CDATA[2
3
5
7
11
13
17
19
23
29
31
37
41
43
47
53
59
61
67
71
73
79
83
89
97
101
103
107
109
113
127
131
137
139
149
151
157
163
167
173
179
181
191
193
197
199
211
223
227
229
233
239
241
251
257
263
269
271
277
281
283
293
307
311
313
317
331
337
347
349
353
359
367
373
379
383
389
397
401
409
419
421
431
433
439
443
449
457
461
463
467
479
487
491
499
503
509
521
523
541
547
557
563
569
571
577
587
593
599
601
607
613
617
619
631
641
643
647
653
659
661
673
677
683
691
701
709
719
727
733
739
743
751
757
761
769
773
787
797
809
811
821
823
827
829
839
853
857
859
863
877
881
883
887
907
911
919
929
937
941
947
953
967
971
977
983
991
997
1009
1013
1019
1021
1031
1033
1039
1049
1051
1061
1063
1069
1087
1091
1093
1097
1103
1109
1117
1123
1129
1151
1153
1163
1171
1181
1187
1193
1201
1213
1217
1223
1229
1231
1237
1249
1259
1277
1279
1283
1289
1291
1297
1301
1303
1307
1319
1321
1327
1361
1367
1373
1381
1399
1409
1423
1427
1429
1433
1439
1447
1451
1453
1459
1471
1481
1483
1487
1489
1493
1499
1511
1523
1531
1543
1549
1553
1559
1567
1571
1579
1583
1597
1601
1607
1609
1613
1619
1621
1627
1637
1657
1663
1667
1669
1693
1697
1699
1709
1721
1723
1733
1741
1747
1753
1759
1777
1783
1787
1789
1801
1811
1823
1831
1847
1861
1867
1871
1873
1877
1879
1889
1901
1907
1913
1931
1933
1949
1951
1973
1979
1987
1993
1997
1999
2003
2011
2017
2027
2029
2039
2053
2063
2069
2081
2083
2087
2089
2099
2111
2113
2129
2131
2137
2141
2143
2153
2161
2179
2203
2207
2213
2221
2237
2239
2243
2251
2267
2269
2273
2281
2287
2293
2297
2309
2311
2333
2339
2341
2347
2351
2357
2371
2377
2381
2383
2389
2393
2399
2411
2417
2423
2437
2441
2447
2459
2467
2473
2477
2503
2521
2531
2539
2543
2549
2551
2557
2579
2591
2593
2609
2617
2621
2633
2647
2657
2659
2663
2671
2677
2683
2687
2689
2693
2699
2707
2711
2713
2719
2729
2731
2741
2749
2753
2767
2777
2789
2791
2797
2801
2803
2819
2833
2837
2843
2851
2857
2861
2879
2887
2897
2903
2909
2917
2927
2939
2953
2957
2963
2969
2971
2999
3001
3011
3019
3023
3037
3041
3049
3061
3067
3079
3083
3089
3109
3119
3121
3137
3163
3167
3169
3181
3187
3191
3203
3209
3217
3221
3229
3251
3253
3257
3259
3271
3299
3301
3307
3313
3319
3323
3329
3331
3343
3347
3359
3361
3371
3373
3389
3391
3407
3413
3433
3449
3457
3461
3463
3467
3469
3491
3499
3511
3517
3527
3529
3533
3539
3541
3547
3557
3559
3571
4999
4993
4987
4973
4969
4967
4957
4951
4943
4937
4933
4931
4919
4909
4903
4889
4877
4871
4861
4831
4817
4813
4801
4799
4793
4789
4787
4783
4759
4751
4733
4729
4723
4721
4703
4691
4679
4673
4663
4657
4651
4649
4643
4639
4637
4621
4603
4597
4591
4583
4567
4561
4549
4547
4523
4519
4517
4513
4507
4493
4483
4481
4463
4457
4451
4447
4441
4423
4421
4409
4397
4391
4373
4363
4357
4349
4339
4337
4327
4297
4289
4283
4273
4271
4261
4259
4253
4243
4241
4231
4229
4219
4217
4211
4201
4177
4159
4157
4153
4139
4133
4129
4127
4111
4099
4093
4091
4079
4073
4057
4051
4049
4027
4021
4019
4013
4007
4003
4001
3989
3967
3947
3943
3931
3929
3923
3919
3917
3911
3907
3889
3881
3877
3863
3853
3851
3847
3833
3823
3821
3803
3797
3793
3779
3769
3767
3761
3739
3733
3727
3719
3709
3701
3697
3691
3677
3673
3671
3659
3643
3637
3631
3623
3617
3613
3607
3593
3583
3581
3571
3559
3557
3547
3541
3539
3533
3529
3527
3517
3511
3499
3491
3469
3467
3463
3461
3457
3449
3433
3413
3407
3391
3389
3373
3371
3361
3359
3347
3343
3331
3329
3323
3319
3313
3307
3301
3299
3271
3259
3257
3253
3251
3229
3221
3217
3209
3203
3191
3187
3181
3169
3167
3163
3137
3121
3119
3109
3089
3083
3079
3067
3061
3049
3041
3037
3023
3019
3011
3001
2999
2971
2969
2963
2957
2953
2939
2927
2917
2909
2903
2897
2887
2879
2861
2857
2851
2843
2837
2833
2819
2803
2801
2797
2791
2789
2777
2767
2753
2749
2741
2731
2729
2719
2713
2711
2707
2699
2693
2689
2687
2683
2677
2671
2663
2659
2657
2647
2633
2621
2617
2609
2593
2591
2579
2557
2551
2549
2543
2539
2531
2521
2503
2477
2473
2467
2459
2447
2441
2437
2423
2417
2411
2399
2393
2389
2383
2381
2377
2371
2357
2351
2347
2341
2339
2333
2311
2309
2297
2293
2287
2281
2273
2269
2267
2251
2243
2239
2237
2221
2213
2207
2203
2179
2161
2153
2143
2141
2137
2131
2129
2113
2111
2099
2089
2087
2083
2081
2069
2063
2053
2039
2029
2027
2017
2011
2003
1999
1997
1993
1987
1979
1973
1951
1949
1933
1931
1913
1907
1901
1889
1879
1877
1873
1871
1867
1861
1847
1831
1823
1811
1801
1789
1787
1783
1777
1759
1753
1747
1741
1733
1723
1721
1709
1699
1697
1693
1669
1667
1663
1657
1637
1627
1621
1619
1613
1609
1607
1601
1597
1583
1579
1571
1567
1559
1553
1549
1543
1531
1523
1511
1499
1493
1489
1487
1483
1481
1471
1459
1453
1451
1447
1439
1433
1429
1427
1423
1409
1399
1381
1373
1367
1361
1327
1321
1319
1307
1303
1301
1297
1291
1289
1283
1279
1277
1259
1249
1237
1231
1229
1223
1217
1213
1201
1193
1187
1181
1171
1163
1153
1151
1129
1123
1117
1109
1103
1097
1093
1091
1087
1069
1063
1061
1051
1049
1039
1033
1031
1021
1019
1013
]]></test_output>
<test_input><![CDATA[3
1
5
3

]]></test_input>
<test_output><![CDATA[2
11
5
]]></test_output>
<test_input><![CDATA[10
1
2
3
4
5
6
7
8
9
10
]]></test_input>
<test_output><![CDATA[2
3
5
7
11
13
17
19
23
29

]]></test_output>
<test_input><![CDATA[1
1
]]></test_input>
<test_output><![CDATA[2
]]></test_output>
<test_input><![CDATA[50
116
89
18
473
97
85
89
285
492
392
281
648
325
442
353
602
48
388
566
383
357
323
559
70
355
632
79
162
230
284
649
498
417
656
28
294
646
234
331
252
406
462
472
2
255
205
510
198
344
636

]]></test_input>
<test_output><![CDATA[641
461
61
3359
509
439
461
1867
3527
2693
1823
4813
2153
3089
2381
4423
223
2677
4111
2647
2399
2141
4051
349
2389
4673
401
953
1451
1861
4817
3557
2879
4909
107
1931
4799
1481
2221
1601
2791
3271
3347
3
1613
1259
3643
1213
2311
4721
]]></test_output>
<test_input><![CDATA[10
669
668
667
666
665
664
663
662
661
660
]]></test_input>
<test_output><![CDATA[4999
4993
4987
4973
4969
4967
4957
4951
4943
4937
]]></test_output>
<hint><![CDATA[]]></hint>
<source><![CDATA[基础算法-数论素数]]></source>
		<solution language="C++"><![CDATA[#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstdio>
#include<cstring>
using namespace std;
int p[300001],a[1001];
bool f[500001];
void prime(int n){
    int i,j;
    memset(f,1,sizeof(f));
    f[0]=f[1]=0;
    for(i=2;i<=sqrt(n);i++) if(f[i]) for(j=i+i;j<=n;j+=i) f[j]=0;
}
int main(){
    int v=0,k,n,i;
    cin>>n;
    for(i=1;i<=n;i++) scanf("%d",&a[i]);
    k=a[1];
    for(i=2;i<=n;i++) if(a[i]>k) k=a[i];
    k*=k;
    if(k==1) k++;
    prime(k);
    for(i=2;i<=k;i++) if(f[i]) p[++v]=i;
    for(i=1;i<=n;i++) printf("%d\n",p[a[i]]);
    return 0;
}]]></solution>
			<solution language="Java"><![CDATA[import java.util.*;
public class Main{
    public static int [] arr = new int[1003];
    public static int count = 1;
    public static void main(String[] args){
        Scanner cin = new Scanner(System.in);
        int n = cin.nextInt();
        savaPrime();
        for(int i = 0 ; i < n; i ++){
            int cur = cin.nextInt();
            System.out.println(arr[cur]);
        }
    }
    public static void savaPrime(){
        for(int i = 0; i <= 5000; i ++){
            if(isPrime(i)){
                arr[count++] = i;
            }
        }
    }
    
    public static boolean isPrime(int n){
        if(n == 0 || n ==1){
            return false;
        }
        for(int i = 2; i <= (int)Math.sqrt(n); i ++){
            if(n % i == 0){
                return false;
            }
        }
        return true;
    }
    
}]]></solution>
	</item>
</fps>
